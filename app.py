import streamlit as st
from io import BytesIO
import pandas as pd
import base64
import plotly.express as px
import streamlit.components.v1 as components
from streamlit_option_menu import option_menu
from pymongo import MongoClient
from datetime import datetime, timedelta
from chatbot import get_exact_answer, save_unanswered_question, save_session

# ------------------- CONFIGURATION -------------------
st.set_page_config(page_title="Chatbot BP", page_icon="ü§ñ", layout="wide")

# ------------------- LOAD SECRETS -------------------
import toml
import os
secrets = toml.load(".streamlit/secrets.toml") if os.path.exists(".streamlit/secrets.toml") else {}
MONGO_URI = secrets.get("mongo", {}).get("uri", "mongodb+srv://itrebmalak:azerty1234@chatbotpbprojet.9v7hlst.mongodb.net/")
DB_NAME = secrets.get("mongo", {}).get("database", "chatbot_db")
QUESTIONS_COLLECTION = "qa"
USAGE_COLLECTION = "usage_stats"
FEEDBACK_COLLECTION = "feedback"

# ------------------- LOGO EN HAUT √Ä DROITE -------------------
with open("logo_bp.png", "rb") as file_:
    contents = file_.read()
    data_url = base64.b64encode(contents).decode("utf-8")

# ------------------- STYLE CSS -------------------
st.markdown(f"""
    <style>
        /* Styles g√©n√©raux */
        .stApp {{
            margin-top: -1rem;
        }}
        /* Sidebar */
        [data-testid="stSidebar"] {{
            background: linear-gradient(180deg, #0C0F0A 0%, #1E2D24 100%) !important;
            padding: 20px 10px !important;
            border-right: 1px solid #B67332 !important;
        }}
        /* Chat */
        .chat-container {{
            height: 60vh !important;
            border-radius: 16px !important;
            background-color: #F8F5F0 !important;
        }}
        /* Admin */
        .admin-container {{
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
        }}
        .stats-card {{
            background-color: white;
            border-radius: 10px;
            padding: 15px;
            margin: 10px 0;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }}
    </style>
""", unsafe_allow_html=True)

# ------------------- MENU -------------------
with st.sidebar:
    st.markdown(f"""
        <div style="text-align:center; margin-bottom:30px;">
            <img src="data:image/png;base64,{data_url}" width="80%">
        </div>
    """, unsafe_allow_html=True)
    
    onglet = option_menu(
        menu_title=None,
        options=["üí¨ Chatbot", "üóÇÔ∏è Cartographie", "üí° Bonnes pratiques", "üîê Admin"],
        icons=["chat-dots", "map", "book", "shield-lock"],
        default_index=0,
        styles={
            "container": {"padding": "0!important"},
            "nav-link": {
                "font-size": "15px",
                "text-align": "left",
                "margin": "5px 0",
                "border-radius": "8px",
            },
            "nav-link-selected": {
                "background-color": "#B67332",
                "font-weight": "normal",
            },
        }
    )
    st.markdown("""
        <hr style="border:0.5px solid #B67332; opacity:0.3; margin:25px 0;">
        <div style="text-align:center; color:#aaa; font-size:14px;">
            <p>Connect√© en tant que :</p>
            <p><b>Inviter</b></p>
        </div>
    """, unsafe_allow_html=True)

# ------------------- SESSION -------------------
if "question" not in st.session_state:
    st.session_state.question = ""
if "reponse" not in st.session_state:
    st.session_state.reponse = ""
if "admin_logged" not in st.session_state:
    st.session_state.admin_logged = False

# ------------------- FONCTIONS UTILITAIRES -------------------
@st.cache_resource
def get_mongo_client():
    return MongoClient(MONGO_URI)

def track_chat_usage():
    try:
        client = get_mongo_client()
        db = client[DB_NAME]
        db[USAGE_COLLECTION].insert_one({
            "user_id": "anonymous",
            "date": datetime.now().strftime("%Y-%m-%d"),
            "timestamp": datetime.now()
        })
    except Exception as e:
        st.error(f"Erreur de tracking : {str(e)}")

# ------------------- ONGLET CHATBOT -------------------
if onglet == "üí¨ Chatbot":
    # Style CSS personnalis√©
    st.markdown(f"""
        <style>
            .chat-container {{  
                height: 50vh;
                overflow-y: auto;
                padding: 20px;
                background-color: #EEE6D8;
                border-radius: 30px;
                margin-bottom: 5px;
                box-shadow: 0 2px 5px rgba(0,0,0,0.1);}}
            .user-message {{
                background-color: #B67332;
                color: white;
                border-radius: 18px 18px 0 18px;
                padding: 12px 16px;
                margin: 8px 0;
                max-width: 70%;
                float: right;
                clear: both;
                box-shadow: 0 1px 3px rgba(0,0,0,0.2);}}
            .bot-message {{
                background-color: #0C0F0A;
                color: white;
                border-radius: 18px 18px 18px 0;
                padding: 12px 16px;
                margin: 8px 0;
                max-width: 70%;
                float: left;
                clear: both;
                box-shadow: 0 1px 3px rgba(0,0,0,0.2);}}
            .chat-input {{
                background-color: white;
                border-radius: 10px;
                padding: 5px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);}}
            .header {{
                text-align: center;
                margin-bottom: 20px;}}
            .logo-container {{
                position: absolute;
                top: 5px;
                right: 30px;
                z-index: 999;}}
        </style>
    """, unsafe_allow_html=True)
    # En-t√™te
    st.markdown("""
        <div class="header">
            <h1 style='color: #e5e7e6;'>üí¨ Chatbot Banque Populaire</h1>
            <p style='color: #e5e7e6; font-size: 20px;'>Je suis votre assistant bancaire Chatbot. Posez-moi vos questions ! üëá</p>
        </div>
    """, unsafe_allow_html=True)
    # Initialisation de la conversation
    if "chat" not in st.session_state:
        st.session_state.chat = []
        # Message de bienvenue initial
        st.session_state.chat.append({
            "role": "bot", 
            "msg": "Bonjour ! Je suis l'assistant virtuel de Banque Populaire. Comment puis-je vous aider aujourd'hui ?"})
    # Conteneur de chat avec d√©filement automatique
    chat_html = "<div class='chat-container' id='chat-container'>"
    for entry in st.session_state.chat:
        if entry["role"] == "user":
            chat_html += f"<div class='user-message'>{entry['msg']}</div>"
        else:
            chat_html += f"<div class='bot-message'>{entry['msg']}</div>"
    chat_html += "</div>"
    st.markdown(chat_html, unsafe_allow_html=True)
    components.html("""
    <script>
        const chatDiv = window.parent.document.querySelector('#chat-container');
        if (chatDiv) {
            chatDiv.scrollTop = chatDiv.scrollHeight;
        }
    </script>
""", height=0)
    # Zone de saisie
    with st.form("chat_form", clear_on_submit=True):
        col1, col2 = st.columns([6, 1])
        with col1:
            question = st.text_input(
                "Votre message",
                placeholder="Tapez votre question ici...",
                key="user_input",
                label_visibility="collapsed"
            )
        with col2:
            send = st.form_submit_button("‚û§", help="Envoyer", use_container_width=True)
        if send and question.strip():
            # Ajout du message utilisateur
            st.session_state.chat.append({"role": "user", "msg": question})    
            # Simulation de d√©lai pour le bot
            with st.spinner("Je r√©fl√©chis..."):
                # R√©cup√©ration de la r√©ponse
                reponse = get_exact_answer(question.strip())
                if reponse:
                    st.session_state.chat.append({"role": "bot", "msg": reponse})
                else:
                    default_msg = "Je n'ai pas trouv√© d'information pr√©cise sur ce sujet. La question est enregistr√©e pour des traitements futurs."
                    st.session_state.chat.append({"role": "bot", "msg": default_msg})
                    save_unanswered_question(question.strip())
            save_session()
            track_chat_usage()
            st.rerun()
    # Bouton de r√©initialisation stylis√©
    if st.button("üîÉ Nouvelle conversation"):
        st.session_state.chat = [{
            "role": "bot", 
            "msg": "Bonjour ! Je suis l'assistant virtuel de Banque Populaire. Comment puis-je vous aider aujourd'hui ?"
        }]
        st.rerun()

# ------------------- ONGLET CARTOGRAPHIE -------------------
elif onglet == "üóÇÔ∏è Cartographie":
    st.markdown(f"""
        <style>
            .header {{
                text-align: center;
                margin-bottom: 20px; }}
        </style>
    """, unsafe_allow_html=True)
    st.markdown("""
        <div class="header">
            <h1 style='color: #e5e7e6;'>üóÇÔ∏è Cartographie des incidents</h1>
        </div>
    """, unsafe_allow_html=True)
    st.markdown("""
            <p style='color: #e5e7e6; font-size: 25px;'>üîé Consultez rapidement et ciblez les incidents op√©rationnels pour identifier les causes de vos dysfonctionnements !</p>
            <p style='color: #e5e7e6; font-size: 20px;'>Rechercher un domaine üëá :</p>
    """, unsafe_allow_html=True)
    search_term = st.text_input(
        "", 
        label_visibility="collapsed",
        placeholder="Saisissez un domaine...",
        key="search_input")
    df = pd.read_excel("cartographie_incidents.xlsx")
    if search_term:
        filtered_df = df[df["Domaine"].str.contains(search_term, case=False, na=False)]
        nb = len(filtered_df)
        st.success(f"‚úÖ {nb} r√©sultat(s) pour : {search_term}")
        if nb > 0:
            st.dataframe(filtered_df[["Transaction", "Nature d'Incident", "Mode Op√©ratoire"]], 
                         use_container_width=True, height=600)
            def to_excel(data):
                output = BytesIO()
                with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
                    data.to_excel(writer, index=False, sheet_name='R√©sultats')
                return output.getvalue()
            excel_bytes = to_excel(filtered_df)
            st.download_button("T√©l√©charger les r√©sultats", data=excel_bytes,
                file_name="resultats.xlsx", mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
    else:
        st.info("üí° Entrez un domaine ou un mot-cl√© pour explorer la cartographie.")

# ------------------- ONGLET BONNES PRATIQUES -------------------
elif onglet == "üí° Bonnes pratiques":
    st.markdown(f"""
        <style>
            .header {{
                text-align: center;
                margin-bottom: 20px;
            }}
        </style>
    """, unsafe_allow_html=True)
    st.markdown("""
        <div class="header">
            <h1 style='color: #e5e7e6;'>üí°Bonnes pratiques op√©rationnelles</h1>
        </div>
    """, unsafe_allow_html=True)
    st.markdown("""
           <p style='color: #e5e7e6; font-size: 25px;'>üîé Consultez les bases de proc√©dures op√©rationnelles et conseils m√©tiers utilis√©s dans les agences Banque populaire </p>  
        <p style='color: #e5e7e6; font-size: 20px;'><strong>Voici un recueil de bonnes pratiques üëá :</strong></p>
    """, unsafe_allow_html=True)
    bonnes_pratiques = {
        "Paiement des frais d'enregistrement de la carte de l'auto-entrepreneur : r√©f√©rence sur T24 13 chiffres au lieu de 12 (transaction PFA)": "D√©rouler l'op√©ration sur le Legacy en effectuant une op√©ration d'encaissement sur T24",
        "Compte re√ßu par mutation affiche le message compte non g√©r√© par votre agence": "Le processus partag√© sur la com Hello Sprint est a respecter en renseignant la demande : mutation Tiers ou mutation compte et en la communiquant au DGSI de la BPR",
        "Champ taille entreprise": "Ce champ n‚Äôest pas modifiable en agence, la gestion est centralis√©e √† la BCP via une mise a jour automatis√©e par chargement de fichier",
        "Eligibilit√© compte/ packs": "L‚Äô√©ligibilit√© aux Comptes et packs est calcul√©e √† partir de la signal√©tique client, la premi√®re v√©rification √† faire en cas de probl√®me et de checker les donn√©es signal√©tiques.",
        "Retrait d√©plac√© sans ch√®que au titulaire du compte": "L'agence doit faire un retrait MAD pour lui-m√™me au lieu de Chaabi Cash sauf en cas d‚Äôun for√ßage sur le compte du client",
        "Pour √©viter l'affichage du message \"MAD r√©gl√©e\" lors du r√®glement des MAD": "Ne pas fermer la fen√™tre avant l'aboutissement de l'op√©ration",
        "Retraits sans ch√®ques sans commissions": "Les frais des retraits sans ch√®ques ne sont pas pr√©lev√©s pour les deux cas suivants :\n1. Client nouvellement cr√©e ne disposant pas de moyens de paiement (pendant un d√©lai de 3 semaines)\n2. Client interdit de ch√©quiers jusqu'√† r√©gularisation de sa situation\n\nPour les cas normaux la commission est de 33DH quel que soit le montant.",
        "Acc√®s √† la caisse": "Le RA peut disposer de deux caisses (caisse secondaire et caisse principale), toutefois, pour y acc√©der une seule caisse peut √™tre ouverte",
        "Ch√©quiers qui ne sont pas physiquement re√ßus et s'affichent sur le SI T24 pour r√©ception": "Les anciennes commandes de ch√©quiers qui n‚Äôont pas abouti et qui remontent √† des dates tr√®s anciennes (Juin et juillet) dont les carnets ne sont pas physiquement re√ßus par l‚Äôagence peuvent √™tre d√©truits sur T24 en utilisant le code : 16 = Annulation",
        "Pour permettre au CTN GC de lever la surveillance ¬´ dossier juridique en cours de validation ¬ª": "Il y a lieu de :\nS‚Äôassurer que les deux champs ¬´ Motif de lev√©e de la surveillance ¬ª et ¬´ Commentaire d√©sactivation/modification ¬ª sont √† blanc et d√©nouer les op√©rations en instance de validation objet de ¬´ Pending Approval ¬ª au niveau de l‚Äôoverview du compte.",
        "Paiement d'une op√©ration RIA": "Le paiement d‚Äôune op√©ration RIA n‚Äôest effectif qu‚Äôapr√®s √©dition du bordereau, si l‚Äôutilisateur n‚Äôarrive pas √† l‚Äô√©tape de l‚Äôimpression l‚Äôop√©ration est consid√©r√©e comme non autoris√©e et le client ne doit pas √™tre servi.",
        "Mise √† disposition": "Si la MAD a √©t√© top√©e P (statut pay√©) sur Host sans que l'op√©ration ne soit retrouv√©e sur T24 par l'agence en charge du r√®glement, l'utilisateur doit d'abord sortir du menu r√®glement et refaire cette op√©ration une nouvelle fois.",
        "Num√©ro GSM des sms": "En cas de non r√©plication du num√©ro GSM bloquant la cr√©ation d'une carte sur Power card, il faut modifier la fiche et ajouter +212. \nLors de l'entr√©e en relation via DIGITALIS avec +212.",
        "La lev√©e de la surveillance migr√©e ¬´ 79 : Autre motif migration ¬ª sur le compte est √† op√©rer √† l‚Äôinstar des surveillances manuelles suivantes lev√©es en Front office": "20 : opposition sur compte\n21 : opposition √† tous mouvements\n22 : oppositions des h√©ritiers\n33 : saisie gel judiciaire\nLa lev√©e des surveillances pr√©cit√©es doit √™tre appuy√©e par un justificatif conform√©ment au dispositif r√©glementaire interne.",
        "Chemin de lev√©e d‚Äôune surveillance manuelle": "1. Aller sur le menu \"Gestion des surveillances\" puis \"Lever de la surveillance\"\n2. Renseigner le num√©ro de compte en question\n3. Cliquer sur le \"+\" comme pour ajouter un nouveau motif de surveillance puis cliquer sur le \"-\" qui apparait en rouge\n4. Cliquer sur Approuver en sollicitant la validation d'un deuxi√®me profil",
        "Etapes de lev√©e d‚Äôune surveillance mixte dont l‚Äôhabilitation est du ressort du Front office (Cf. Hello Sprint du 28/07)": "Cette lev√©e doit √™tre appuy√©e par un justificatif conform√©ment au dispositif r√©glementaire interne.",
        "Chemin de lev√©e d‚Äôune surveillance mixte de l'Overview compte": "1. Acc√®s √† l'Overview √† travers la Recherche du compte\n2. Lev√©e √† travers le lien ¬´ Lev√©e surveillances mixtes ¬ª et validation via un deuxi√®me profil √† travers le lien ¬´Autorisat. lev√©e surveillances mixtes ¬ª (cf. Hello Sprint du 28/07)",
        "Ex√©cution d'une op√©ration de caisse au d√©bit (message bloquant : Le solde de la caisse est insuffisant)": "S'assurer de l'autorisation des transferts entre la caisse principale et la caisse secondaire au d√©marrage de la journ√©e avant la saisie de toutes op√©rations de caisse afin d'√©viter les √©carts entre les coupures et le solde de la caisse.",
        "Lev√©e de blocage manuel": "Lorsqu‚Äôon souhaite lever un blocage manuellement des deux syst√®mes (MANSOUR/T24), il faudrait commencer par la lev√©e dans T24 dans un premier temps, et ensuite le lever dans MANSOUR PAP.",
        "Affectation d‚Äôune caisse √† un nouvel agent": "Avant l‚Äôaffectation d‚Äôun agent vers une nouvelle agence, toujours s‚Äôassurer au pr√©alable qu‚Äôil n‚Äôa pas une caisse qui lui est encore affect√©e, ‚Ä¶ pour √©viter tout blocage dans sa nouvelle affectation.",
        "Probl√®me d‚Äôimpression": "Ne pas quitter l‚Äô√©cran principal de l‚Äôimpression avant la fin du traitement : sablier ou barre de progression en cours, ou alors √©dition non trouv√©e merci de r√©essayer. Dans ce dernier cas, il faut cliquer sur ok et redemander l‚Äôimpression.",
        "Historique des comptes 13230 non consultables sur PAP mais consultables sur T24": "Changer le g√©n√©rique 13230 (PCI) par le correspondant 12131 (PCEC). Faire la consultation sur docubase",
        "Au moment de la cl√¥ture de compte, le message suivant s‚Äôaffiche ¬´ Partiel payoff is not allowed ¬ª": "V√©rifier au niveau de l‚Äôonglet Bills dans la rubrique Addional Details au niveau de l‚Äôover view du compte, l‚Äôexistence d‚Äôimpay√©s en instance de r√®glement",
        "Cl√¥ture compte sur carnet": "Le retrait pour la cl√¥ture du compte sur carnet √† effectuer sur PAP au lieu de T24",
        "Incidents KYC": "Lors de l‚Äô√©laboration du compte rendu d‚Äôentretien NE PAS UTILISER SUR LE BOUTON BROUILLON",
        "Clients de passage": "La modification de la mini signal√©tique clients de passage se fait EXCLUSIVEMENT au niveau des √©crans r√©f√©rentiel, la modification effectu√©e sur les √©crans des op√©rations n‚Äôest pas prise en charge.",
        "Souscription aux packages avec message d‚Äôerreur : Expiry date": "Si le message d‚Äôerreur est affich√© lors de la souscription aux packages remonter le probl√®me pour r√©solution en central par les √©quipes ATF.\nUne fausse manipulation est constat√©e pour contourner ce probl√®me en supprimant la valeur UPDATE du champ Action en bas de l‚Äô√©cran, cette action d√©bloque l‚Äô√©cran de souscription mais engendre des probl√®mes de comptabilisation et de r√©plication du pack en question au niveau du host.\n\nDe ce fait d√®s apparition de ce message la seule action √† entreprendre est de contacter l‚Äô√©quipe ATF pour d√©blocage.",
        "Facilit√©s de caisse": "En cas d‚Äôinexistence de la facilit√© de caisse au niveau de la capacit√© de paiement d‚Äôun client, envoyer un mail au CTN pour prise en charge de la saisie sur T24 (renouvellement ou nouvelle mise en place)",
        "Messages d‚Äôerreur": "Les messages d‚Äôerreur les plus fr√©quents ont √©t√© revus et traduits, le restant sera traduit au fur et √† mesure",
        "Consultation des packs": "Il est d√©sormais possible de consulter les packs li√©s √† un compte via NACOM (par l‚Äôagence). Vous pouvez utiliser cette transaction Liste pack par compte dans le menu Offres Packag√©es pour v√©rifier la liste des packs par compte au niveau du HOST.",
        "Retrait et versement avec date de valeur pr√©f√©rentielle": "Le retrait et versement avec date de valeur pr√©f√©rentielle est √† effectuer sur PAP au lieu de T24. Ceci dans l‚Äôattente du d√©ploiement de la gestion automatique des dates de valeurs pr√©f√©rentielle\nProc√©der par la suite √† un encaissement/d√©caissement SUR T24 de la caisse secondaire de l‚Äôagent ayant effectu√© l‚Äôop√©ration.",
        "D√©livrance de l‚ÄôAttestation de RIB": "L‚Äôattestation de RIB n‚Äôest √† d√©livrer au client qu‚Äôune fois le dossier juridique valid√© par le Back -Office CTN Gestion des comptes et la surveillance lev√©e par ce dernier. En effet, au cas o√π le client ferait pr√©valoir cette attestation aupr√®s d‚Äôinstances externes √† la banque et que des op√©rations li√©es √† cette d√©marche devraient donner lieu au d√©bit du compte (domiciliation des titres d‚Äôimportation, ‚Ä¶), elles n‚Äôaboutiraient pas et se traduiraient par des pr√©judices √† la relation.",
        "Ajout de cotitulaire sur un compte": "Avant de valider l‚Äôajout de cotitulaire(s) sur un compte, il y a lieu de s‚Äôassurer que le champ produit affiche le compte attribu√© au client, √† v√©rifier sur l'overview client. Si ce champ affiche un compte STD, il y a lieu de choisir sur la liste d√©roulante le bon produit pour √©viter tout blocage",
        "RAPPEL : Clients de passage": "Nous rappelons que la mini signal√©tique client de passage pr√©sente au niveau des √©crans de distribution est une contrainte r√©glementaire, les donn√©es saisies sont disponibles au niveau de la CIN du client obligatoire pour effectuer les op√©rations (la seule information √† demander est la profession).\nCes donn√©es sont saisies une seule fois lors du premier passage du tiers et sont stock√©es au niveau de la base T24, au prochain passage il suffira de renseigner le num√©ro de la CIN et les informations saisies auparavant remonteront sur les √©crans automatiquement et ceci quelque soit l‚Äôagence ou le tiers se pr√©senterait.",
        "Time Out de 5min": "Le syst√®me a √©t√© param√©tr√© de fa√ßon √† purger les sessions qui d√©passent 5 min d‚Äôinactivit√©.\nL‚Äôactivit√© sur T24 est v√©hicul√©e via le d√©roulement d‚Äôune liste de valeur par exemple et non pas un clic sur la page, il est recommand√© de cliquer sur une des listes d√©roulantes de la page en cours pour r√©initialiser le compteur."
    }
    for sujet, solution in bonnes_pratiques.items():
        with st.expander(f"üìå {sujet}"):
            st.markdown(f"<div style='padding-left:1rem;'>{solution}</div>", unsafe_allow_html=True)

# ------------------- ONGLET ADMIN -------------------
elif onglet == "üîê Admin":
    # Configuration du style
    st.markdown("""
        <style>
            .metric-card {
                background-color: #2c3e50;
                border-radius: 10px;
                padding: 15px;
                margin-bottom: 15px;
                color: white;}
            .header {
                text-align: center;
                margin-bottom: 20px;}
        </style>
    """, unsafe_allow_html=True)

    # En-t√™te de la page
    st.markdown("""
        <div class="header">
            <h1 style='color: #e5e7e6;'>üîê Espace Administrateur</h1>
            <p style='color: #e5e7e6; font-size: 20px;'>Interface de gestion r√©serv√©e aux administrateurs üëá</p>
        </div>
    """, unsafe_allow_html=True)
    # Authentification
    if not st.session_state.get('admin_logged'):
        with st.expander("üîë Authentification Administrateur", expanded=True):
            username = st.text_input("Identifiant")
            password = st.text_input("Mot de passe", type="password")

            if st.button("Se connecter"):
                if username == "kenzabp" and password == "qwerty1234":  
                    st.session_state.admin_logged = True
                    st.rerun()
                else:
                    st.error("Identifiants incorrects")
    # Interface admin (si connect√©)
    if st.session_state.get('admin_logged'):
        try:
            # Initialisation MongoDB
            @st.cache_resource
            def init_mongo():
                try:
                    client = MongoClient(MONGO_URI, serverSelectionTimeoutMS=5000)
                    client.admin.command('ping')
                    db = client[DB_NAME]
                    # V√©rification des collections
                    for col in [USAGE_COLLECTION, QUESTIONS_COLLECTION, FEEDBACK_COLLECTION]:
                        if col not in db.list_collection_names():
                            db.create_collection(col)
                    return db
                except Exception as e:
                    st.error(f"Erreur MongoDB: {str(e)}")
                    return None
            db = init_mongo()           
            if db is None:
                st.error("Impossible de se connecter √† la base de donn√©es")
                st.stop()
            # En-t√™te du dashboard
            st.markdown("""
                <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;'>
                    <h2 style='color: #FFFFFF;'>üìä Tableau de Bord Administrateur</h2>
                    <button onclick="window.location.reload()" style='padding: 8px 15px; background-color: #B67332; color: white; border: none; border-radius: 5px; cursor: pointer;'>
                        üîÑ Rafra√Æchir
                    </button>
                </div>
            """, unsafe_allow_html=True)
            # ------------------- SECTION STATISTIQUES -------------------
            st.markdown("## üìà Statistiques Globales")           
            # Fonction helper pour les m√©triques
            def display_metric(col, title, value, unit="", icon="üìä"):
                with col:
                    st.markdown(f"""
                        <div class="metric-card">
                            <div style="font-size: 14px; margin-bottom: 5px;">{icon} {title}</div>
                            <div style="font-size: 24px; font-weight: bold;">{value} {unit}</div>
                        </div>
                    """, unsafe_allow_html=True)
            # Ligne 1 - Statistiques d'utilisation
            col1, col2, col3 = st.columns(3)
            try:
                # Utilisateurs uniques
                unique_users = len(db[USAGE_COLLECTION].distinct("user_id"))
                display_metric(col1, "Utilisateurs uniques", unique_users, icon="üë•")
                # Sessions totales
                total_sessions = db[USAGE_COLLECTION].count_documents({})
                display_metric(col2, "Sessions totales", total_sessions, icon="üí¨")
                # Dur√©e moyenne
                avg_duration = list(db[USAGE_COLLECTION].aggregate([
                    {"$group": {"_id": None, "avg": {"$avg": "$duration"}}}
                ]))[0]['avg'] if db[USAGE_COLLECTION].count_documents({}) > 0 else 0
                display_metric(col3, "Dur√©e moyenne", f"{round(avg_duration, 1)}", "min", icon="‚è±Ô∏è")
            except Exception as e:
                st.error(f"Erreur lors du chargement des statistiques: {str(e)}")
            # Ligne 2 - Performance du chatbot
            col4, col5, col6 = st.columns(3)
            try:
                # Taux de r√©solution
                resolved = db[QUESTIONS_COLLECTION].count_documents({"resolved": True})
                total = db[QUESTIONS_COLLECTION].count_documents({})
                rate = round((resolved/total)*100, 1) if total > 0 else 0
                display_metric(col4, "Taux de r√©solution", rate, "%", icon="‚úÖ")
                # Questions sans r√©ponse
                unanswered = db[QUESTIONS_COLLECTION].count_documents({"answer": ""})
                display_metric(col5, "Questions sans r√©ponse", unanswered, icon="‚ùå")
                # Temps de r√©ponse
                avg_time_result = list(db[QUESTIONS_COLLECTION].aggregate([
                    {"$group": {"_id": None, "avg": {"$avg": "$response_time"}}}
                ]))
                avg_time = avg_time_result[0]["avg"] if avg_time_result and avg_time_result[0]["avg"] is not None else 0
                display_metric(col6, "Temps de r√©ponse", f"{round(avg_time, 2)}", "sec", icon="‚ö°")
            except Exception as e:
                st.error(f"Erreur lors du chargement des performances: {str(e)}")
            # ------------------- VISUALISATION GRAPHIQUE -------------------
            st.markdown("## üìä Visualisations")
            try:
                # Top 10 des questions seulement
                top_questions = list(db[QUESTIONS_COLLECTION].aggregate([
                    {"$group": {"_id": "$question", "count": {"$sum": 1}}},
                    {"$sort": {"count": -1}},
                    {"$limit": 10}
                ]))
                if top_questions:
                    fig = px.bar(
                        x=[q["count"] for q in top_questions],
                        y=[q["_id"] for q in top_questions],
                        orientation='h',
                        labels={"x": "Nombre de demandes", "y": "Question"},
                        title="Top 10 des questions pos√©es")
                    st.plotly_chart(fig, use_container_width=True)
                else:
                    st.info("Aucune question enregistr√©e")
            except Exception as e:
                st.error(f"Erreur lors du chargement des questions: {str(e)}")
            # ------------------- DONN√âES D√âTAILL√âES -------------------
            st.markdown("## üîç D√©tails des donn√©es")
            with st.expander("üìù Derni√®res interactions"):
                try:
                    last_interactions = list(db[USAGE_COLLECTION].find(
                        {}, 
                        {"_id": 0, "date": 1, "user_id": 1, "duration": 1}
                    ).sort("date", -1).limit(10))
                    st.dataframe(last_interactions)
                except Exception as e:
                    st.error(f"Erreur lors du chargement des interactions: {str(e)}")
            with st.expander("‚ùì Derni√®res questions"):
                try:
                    last_questions = list(db[QUESTIONS_COLLECTION].find(
                        {},
                        {"_id": 0, "question": 1, "resolved": 1, "timestamp": 1}
                    ).sort("timestamp", -1).limit(10))
                    st.dataframe(last_questions)
                except Exception as e:
                    st.error(f"Erreur lors du chargement des questions: {str(e)}")
            # D√©connexion
            if st.button("üö™ D√©connexion", type="primary"):
                st.session_state.admin_logged = False
                st.rerun()
        except Exception as e:
            st.error(f"Une erreur critique est survenue: {str(e)}")
            st.error("Veuillez v√©rifier votre connexion et r√©essayer")